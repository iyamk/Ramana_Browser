// IMPORTANT: Start your code on the 2nd line
// Disable about:config warning
pref('browser.aboutConfig.showWarning', false);

// Disable checking for the default browser
pref('browser.shell.checkDefaultBrowser', false);

// Bringing back 2010, do not close the browser when closing the last tab
pref('browser.tabs.closeWindowWithLastTab', false);

// Show warning on exit otherwise everything is lost
pref('browser.tabs.warnOnClose', true);

// The tab thumbnail display feature is completely useless and not private
pref('browser.tabs.hoverPreview.showThumbnails', false);

// Everyone makes mistakes
pref('layout.spellcheckDefault', 0);

// Google is spying on us through translation
pref('browser.translations.enable', false);

// Always ask you where to save files
pref('browser.download.useDownloadDir', false);

// The browser will ask what to do with the downloaded files
pref('browser.download.always_ask_before_handling_new_types', true);

// Turn off DRM, don't use DRM content
// Read info: https://www.researchgate.net/publication/374355905_Your_DRM_Can_Watch_You_Too_Exploring_the_Privacy_Implications_of_Browsers_misImplementations_of_Widevine_EME
pref('media.eme.enabled', false);

// Turn off picture in picture, there is a suspicion that someone can intercept the video
pref('media.videocontrols.picture-in-picture.video-toggle.enabled', false);

// Disable media control, less outside interference and more privacy
pref('media.hardwaremediakeys.enabled', false);

// Don't offer add-ons or other crap spying on you
pref('browser.newtabpage.activity-stream.asrouter.userprefs.cfr.addons', false);
pref('browser.newtabpage.activity-stream.asrouter.userprefs.cfr.features', false);

// Set clean homepage and new windows
pref('browser.startup.homepage', 'chrome://browser/content/blanktab.html');

// Set clean new tabs
pref('browser.newtabpage.enabled', false);
pref('browser.newtabpage.enhanced', false);
pref('browser.newtabpage.introShown', false);
pref('browser.newtabpage.activity-stream.showSearch', false);
pref('browser.newtabpage.activity-stream.feeds.topsites', false);
pref('browser.newtabpage.activity-stream.showSponsoredTopSites', false);
pref('browser.newtabpage.activity-stream.feeds.snippets', false);
pref('browser.newtabpage.activity-stream.feeds.section.topstories', false);
pref('browser.newtabpage.activity-stream.feeds.section.highlights.includePocket', false);
pref('browser.newtabpage.activity-stream.feeds.section.highlights', false);

// Do not display queries from history in the search bar
// For convenience enabled, it does not affect the tracking sites
pref('browser.urlbar.suggest.history', true);

// Turn it off just in case
pref('browser.urlbar.suggest.topsites', false);
pref('browser.urlbar.suggest.engines', false);

// Don't save passwords
pref('signon.rememberSignons', false);

// Turn it off so there is no requests to Mozzila
pref('signon.management.page.breach-alerts.enabled', false);

// Block requests to location, camera and other things
pref('permissions.default.geo', 2);
pref('permissions.default.camera', 2);
pref('permissions.default.microphone', 2);
pref('permissions.default.desktop-notification', 2);
pref('permissions.default.desktop-notification', 2);
pref('permissions.default.xr', 2);

// New spying 2025, sending pings
lockPref('datareporting.usage.uploadEnabled', false);

// Link prefetching is disabled
pref('network.predictor.enabled', false);
pref('network.predictor.enable-prefetch', false);
pref('network.prefetch-next', false);

// Disable speculative parallel connections
pref('network.http.speculative-parallel-limit', 0);

// Disable speculative connect in the URL bar
pref('browser.urlbar.speculativeConnect.enabled', false);

// Disable DNS prefetching
pref('network.dns.disablePrefetch', true);

// Disable DNS prefetching from HTTPS pages
pref('network.dns.disablePrefetchFromHTTPS', true);

// Disable prefetch dns for anchor http document
pref('dom.prefetch_dns_for_anchor_http_document', false);

// Disable captive portal detection service
pref('network.captive-portal-service.enabled', false);
pref('network.connectivity-service.enabled', false);

// Disable all telemetry
lockPref('browser.search.serpEventTelemetry.enabled', false);
lockPref('browser.search.serpEventTelemetryCategorization.enabled', false);
lockPref('browser.newtabpage.activity-stream.feeds.telemetry', false);
lockPref('browser.newtabpage.activity-stream.telemetry', false);
lockPref('browser.newtabpage.activity-stream.telemetry.structuredIngestion.endpoint', '');
lockPref('browser.ping-centre.telemetry', false);
lockPref('toolkit.telemetry.archive.enabled', false);
lockPref('toolkit.telemetry.bhrPing.enabled', false);
lockPref('toolkit.telemetry.enabled', false);
lockPref('toolkit.telemetry.rejected', true);
lockPref('toolkit.telemetry.firstShutdownPing.enabled', false);
lockPref('toolkit.telemetry.hybridContent.enabled', false);
lockPref('toolkit.telemetry.newProfilePing.enabled', false);
lockPref('toolkit.telemetry.reportingpolicy.firstRun', false);
lockPref('toolkit.telemetry.shutdownPingSender.enabled', false);
lockPref('toolkit.telemetry.unified', false);
lockPref('toolkit.telemetry.unifiedIsOptIn', false);
lockPref('toolkit.telemetry.updatePing.enabled', false);
lockPref('toolkit.telemetry.server', '');
lockPref('toolkit.telemetry.prompted', 2);

// Disable all experiments
lockPref('experiments.activeExperiment', false);
lockPref('experiments.enabled', false);
lockPref('experiments.manifest.uri', '');
lockPref('experiments.supported', false);
lockPref('network.allow-experiments', false);
// Disable data submission for experiments
lockPref('datareporting.policy.dataSubmissionEnabled', false);

// Disable Firefox Health Report service
lockPref('datareporting.healthreport.service.enabled', false);
// Disable data upload for Firefox Health Report
lockPref('datareporting.healthreport.uploadEnabled', false);

// Disable new tab preload
pref('browser.newtab.preload', false);

// Disable search suggestions
pref('browser.search.suggest.enabled', false);

// Disables geolocation and Firefox logging geolocation requests
pref('geo.enabled', false);
pref('geo.wifi.uri', '');
pref('browser.search.geoip.url', '');

// Safe Browsing Application Reputation URL
lockPref('browser.safebrowsing.appRepURL', '');
// Disable blocked URIs in Safe Browsing
lockPref('browser.safebrowsing.blockedURIs.enabled', false);
// Disable Safe Browsing for downloads
lockPref('browser.safebrowsing.downloads.enabled', false);
// Disable remote Safe Browsing for downloads
lockPref('browser.safebrowsing.downloads.remote.enabled', false);
lockPref('browser.safebrowsing.downloads.remote.block_dangerous', false);
lockPref('browser.safebrowsing.downloads.remote.block_dangerous_host', false);
lockPref('browser.safebrowsing.downloads.remote.block_potentially_unwanted', false);
lockPref('browser.safebrowsing.downloads.remote.block_uncommon', false);
lockPref('browser.safebrowsing.downloads.remote.timeout_ms', 0);
// Safe Browsing remote URL
lockPref('browser.safebrowsing.downloads.remote.url', '');
// Disable Safe Browsing
lockPref('browser.safebrowsing.enabled', false);
// Disable Safe Browsing for malware
lockPref('browser.safebrowsing.malware.enabled', false);
// Disable Safe Browsing for phishing
lockPref('browser.safebrowsing.phishing.enabled', false);

// Disable Google Safe Browsing and malware and phishing protection. (Spy)
// Stop sending links and downloading lists from Google.
// Security risk, but privacy improvement.
// Note: this list may be incomplete as Firefox updates. Be sure to search for browser.safebrowsing.provider.google*
// Also, simply setting safebrowsing.*.enabled to false should make setting the URLs to blank redundant, but better to be safe.
// If you see anything pointing to Google, probably best to remove it.
lockPref('browser.safebrowsing.provider.google4.updateURL', '');
lockPref('browser.safebrowsing.provider.google4.reportURL', '');
lockPref('browser.safebrowsing.provider.google4.reportPhishMistakeURL', '');
lockPref('browser.safebrowsing.provider.google4.reportMalwareMistakeURL', '');
lockPref('browser.safebrowsing.provider.google4.lists', '');
lockPref('browser.safebrowsing.provider.google4.gethashURL', '');
lockPref('browser.safebrowsing.provider.google4.dataSharingURL', '');
lockPref('browser.safebrowsing.provider.google4.dataSharing.enabled', false);
lockPref('browser.safebrowsing.provider.google4.advisoryURL', '');
lockPref('browser.safebrowsing.provider.google4.advisoryName', '');
lockPref('browser.safebrowsing.provider.google.updateURL', '');
lockPref('browser.safebrowsing.provider.google.reportURL', '');
lockPref('browser.safebrowsing.provider.google.reportPhishMistakeURL', '');
lockPref('browser.safebrowsing.provider.google.reportMalwareMistakeURL', '');
lockPref('browser.safebrowsing.provider.google.pver', '');
lockPref('browser.safebrowsing.provider.google.lists', '');
lockPref('browser.safebrowsing.provider.google.gethashURL', '');
lockPref('browser.safebrowsing.provider.google.advisoryURL', '');
lockPref('browser.safebrowsing.provider.mozilla.lists', '');
lockPref('browser.safebrowsing.provider.mozilla.lists.base', '');
lockPref('browser.safebrowsing.provider.mozilla.lists.content', '');
lockPref('browser.safebrowsing.provider.mozilla.updateURL', '');
lockPref('browser.safebrowsing.downloads.remote.url', '');
lockPref('browser.safebrowsing.reportPhishURL', '');
lockPref('browser.safebrowsing.id', '');
lockPref('urlclassifier.blockedTables', '');
lockPref('urlclassifier.disallow_completions', '');
lockPref('urlclassifier.gethashnoise', 0);
lockPref('urlclassifier.gethash.timeout_ms', 0);
lockPref('urlclassifier.malwareTable', '');
lockPref('urlclassifier.max-complete-age', 0);
lockPref('urlclassifier.phishTable', '');
lockPref('browser.safebrowsing.prefixset_max_array_size', 0);

// Disable DoH. He is spying, it is better to set up a custom one or set up a system
pref('network.trr.mode', 5);

// When updating the browser, do not open the What's New page
pref('browser.startup.homepage_override.mstone', 'ignore');

// Disable 3rd party closed-source Pocket integration
pref('extensions.pocket.enabled', false);

// Viewing pdf in browser is not safe
pref('pdfjs.disabled', true);

// Disable caching for Firefox Add-ons
pref('extensions.getAddons.cache.enabled', false);

// Disable Normandy
pref('app.normandy.enabled', false);
pref('app.normandy.api_url', '');

// Disable Shield Studies opt-out
pref('app.shield.optoutstudies.enabled', false);

// Disable WebRTC peerconnection
pref('media.peerconnection.enabled', false);

// Disable Beacon API, this is spying after closing the tab
pref('beacon.enabled', false);

// Breakpad crash reporting
pref('breakpad.reportURL', '');

// Disable offline cache. It is also useful so as not to hammer the disk with all sorts of rubbish
pref('browser.cache.offline.enable', false);

// Disable all crash reports
pref('browser.crashReports.unsubmittedCheck.autoSubmit', false);
pref('browser.crashReports.unsubmittedCheck.autoSubmit2', false);
pref('browser.crashReports.unsubmittedCheck.enabled', false);
pref('dom.ipc.tabs.createKillHardCrashReports', false);
pref('toolkit.crashreporter.infoURL', '');

// Disable crazy reset prompt
pref('browser.disableResetPrompt', true);

// Disable domain guessing
pref('browser.fixup.alternate.enabled', false);

// Delete Self-support URL
pref('browser.selfsupport.url', '');

// Sessionstore privacy level
pref('browser.sessionstore.privacy_level', 2);

// Block autoplay video and audio
pref('media.autoplay.default', 5);

// Firefox will ask before connecting insecurely
pref('dom.security.https_only_mode', true);

